#
# Copyright (c) 2014
# UEFI toolkit project.
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# 3. All advertising materials mentioning features or use of this software must
#    display the following acknowledgement:
# 
#    This product includes software developed by Intel Corporation and its
#    contributors.
# 
# 4. Neither the name of Intel Corporation or its contributors may be used to
#    endorse or promote products derived from this software without specific
#    prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY INTEL CORPORATION AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL INTEL CORPORATION OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

####################################################################################
#
# Root makefile builds external EFI targets
# 
####################################################################################

ifndef EFI_MODULE
    $(error EFI_MODILE not set)
endif

#
# Include external target
#

include $(EFI_MODULE)

#
# Paths
#

EFI_ROOT_DIR = $(shell pwd)

#
# Toolchain 
#

CC   	= x86_64-pc-mingw32-gcc
DLINK 	= x86_64-pc-mingw32-ld 
LIB  	= x86_64-pc-mingw32-ar
ASM  	= x86_64-pc-mingw32-as
MAKE    = make
FWIMAGE = fwimage

#
# Compiler flags
#

CC_FLAGS += -fshort-wchar -fno-strict-aliasing -Wall -mno-red-zone -mno-stack-arg-probe -DEFIX64 -nostdinc -nostdlib

ifdef EFI_DEBUG
    CC_FLAGS = -pg -O0 -DEFI_DEBUG
else
    CC_FLAGS = -O3
endif

#
# Linker flags
#

DLINK_FLAGS += -nostdlib --pie --gc-sections --image-base=0 --fatal-warnings

#
# Archiver flags
#

LIB_FLAGS += -cr

#
# Rules
#

%.o:%.c
	$(CC) $(CC_FLAGS) -c $< -o $@

#
# Targets
#

# efibin target for building external binary modules
# external makefile should set:
# - EFI_OBJS: 			objects binary is built from
# - EFI_BIN_TARGET: 	resulting binary name
# - EFI_BIN_ENTRY: 		name of the entry point symbol
# - EFI_BIN_SUBSYSTEM: 	subsystem type (EFI_APPLICATION, EFI_DRIVER, etc)
efibin: $(EFI_BIN_TARGET)

$(EFI_BIN_TARGET): $(EFI_OBJS)
	$(DLINK) $(DLINK_FLAGS) --entry $(EFI_BIN_ENTRY) $(EFI_OBJS) -o $(EFI_BIN_TARGET)


# efilib target for building external static libraries
# external makefile should set:
# - EFI_OBJS: 			objects for library
# - EFI_LIB_TARGET: 	resulting library name
efilib: $(EFI_LIB_TARGET)

$(EFI_LIB_TARGET): $(EFI_OBJS)
	$(LIB) $(LIB_FLAGS) $(EFI_LIB_TARGET) $(EFI_OBJS)

